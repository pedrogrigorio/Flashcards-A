// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  username      String    @unique
  name          String    @default("")
  email         String    @unique
  password      String
  imgSrc        String    @default("")
  dayStreak     Int       @default(0)
  cardsReviewed Int       @default(0)
  lastReview    DateTime?

  friends       Friend[]       @relation("UserFriends")
  friendsOf     Friend[]       @relation("UserFriendsOf")
  notifications Notification[]
  decks         Deck[]
}

model Friend {
  username      String
  name          String
  imgSrc        String
  dayStreak     Int
  cardsReviewed Int

  user   User @relation("UserFriendsOf", fields: [userId], references: [id])
  userId Int

  friendOf   User @relation("UserFriends", fields: [friendOfId], references: [id])
  friendOfId Int

  @@id([userId, friendOfId])
}

model Notification {
  id       Int  @id @default(autoincrement())
  type     Int
  status   Int?
  senderId Int?

  receiver   User @relation(fields: [receiverId], references: [id])
  receiverId Int
}

model Deck {
  id               Int    @id @default(autoincrement())
  title            String @default("Novo Deck")
  imgSrc           String @default("")
  newCardsCount    Int    @default(0)
  learnCardsCount  Int    @default(0)
  reviewCardsCount Int    @default(0)
  User             User?  @relation(fields: [userId], references: [id])
  userId           Int?
  cards            Card[]
}

model Card {
  id                   Int         @id @default(autoincrement())
  frontText            String
  backText             String
  stampLevel           Int?        @default(-1)
  reviewedAt           DateTime?
  nextReview           DateTime?
  lastSuccessfulReview DateTime?
  startingEasy         Int         @default(230)
  Deck                 Deck?       @relation(fields: [deckId], references: [id])
  deckId               Int?
  highlights           Highlight[]
}

model Highlight {
  id            Int    @id @default(autoincrement())
  color         String
  startPosition Int
  endPosition   Int
  Card          Card?  @relation(fields: [cardId], references: [id])
  cardId        Int?
}
